%output "parser.c"
%defines "parser.h"
%define parse.error verbose
%define parse.lac full

%{

#include <stdio.h>

int yylex(void);
void yyerror(char const* s);

%}

%token
BREAK
CASE
CATCH
CLASS
CONST_RW
CONTINUE
DEBUGGER
DEFAULT
DELETE
DO
ELSE
ENUM
EXPORT
EXTENDS
FALSE_RW
FINALLY
FOR
FUNCTION
IF
IMPLEMENTS
IMPORT
IN
INSTANCEOF
INTERFACE
LET
NEW
NULL_RW
PACKAGE
PRIVATE
PROTECTED
PUBLIC
RETURN
SUPER
SWITCH
THIS
THROW
TRUE_RW
TRY
TYPEOF
VAR
VOID_RW
WHILE
WITH
AWAIT
YIELD
STATIC
AS
ASYNC
FROM
GET
OF
SET
TARGET
ANY
BOOLTYPE
CONSTRUCTOR
DECLARE
MODULE
REQUIRE
NUMBER
STRING
SYMBOL
TYPE
ASSIGN
ARROW
COMMA
SEMI
COLON
TERNARY
CHAIN
PIPELINE
DOT
SPREAD
PLUS
INCREMENT
PLUS_ASSIGN
SUB
DECREMENT
SUB_ASSIGN
MULT
MULT_ASSIGN
DIV
DIV_ASSIGN
EXP
EXP_ASSIGN
REM
REM_ASSIGN
BITWISE_NOT
BITWISE_AND
BITWISE_AND_ASSIGN
BITWISE_OR
BITWISE_OR_ASSIGN
BITWISE_XOR
BITWISE_XOR_ASSIGN
LOGICAL_NOT
LOGICAL_NULL
LOGICAL_NULL_ASSIGN
LOGICAL_AND
LOGICAL_AND_ASSIGN
LOGICAL_OR
LOGICAL_OR_ASSIGN
EQ
EQ_STRICT
INEQ
INEQ_STRICT
LT
LT_EQ
GT
GT_EQ
LSHIFT
LSHIFT_ASSIGN
RSHIFT
RSHIFT_ASSIGN
RSHIFT_UNSIGNED
RSHIFT_UNSIGNED_ASSIGN
LPAR
RPAR
LBRACE
RBRACE
LBRACKET
RBRACKET
INT_VAL
REAL_VAL
STR_VAL
ID

%%

assign_stmt:	ID ASSIGN expr SEMI ;
expr:			expr MULT expr
			|	expr DIV expr
			|	expr PLUS expr
			|	expr SUB expr
			|	INT_VAL
			|	REAL_VAL ;

%%

int main(void)
{
	if (yyparse() == 0)
		printf("PARSE SUCCESSFUL!\n");
	else
		printf("PARSE FAILED!\n");

	return 0;
}