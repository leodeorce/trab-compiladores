3: function -> FUNCTION
3: fat -> ID
3: ( -> LPAR
3: n -> ID
3: : -> COLON
3: number -> NUMBER
3: ) -> RPAR
3: : -> COLON
3: number -> NUMBER
3: { -> LBRACE
4: if -> IF
4: ( -> LPAR
4: n -> ID
4: == -> EQ
4: 0 -> INT_VAL
4: ) -> RPAR
4: { -> LBRACE
5: return -> RETURN
5: 1 -> INT_VAL
5: ; -> SEMI
6: } -> RBRACE
7: else -> ELSE
7: { -> LBRACE
8: n -> ID
8: = -> ASSIGN
8: n -> ID
8: - -> SUB
8: 1 -> INT_VAL
8: ; -> SEMI
9: let -> LET
9: res -> ID
9: : -> COLON
9: number -> NUMBER
9: ; -> SEMI
10: res -> ID
10: = -> ASSIGN
10: fat -> ID
10: ( -> LPAR
10: n -> ID
10: ) -> RPAR
10: ; -> SEMI
11: return -> RETURN
11: res -> ID
11: * -> MULT
11: n -> ID
11: ; -> SEMI
12: } -> RBRACE
13: } -> RBRACE
15: let -> LET
15: x -> ID
15: = -> ASSIGN
15: fat -> ID
15: ( -> LPAR
15: 5 -> INT_VAL
15: ) -> RPAR
15: ; -> SEMI
17: console -> ID
17: . -> DOT
17: log -> ID
17: ( -> LPAR
17: x -> ID
17: ) -> RPAR
17: ; -> SEMI
