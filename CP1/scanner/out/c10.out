3: let -> LET
3: i -> ID
3: : -> COLON
3: number -> NUMBER
3: ; -> SEMI
4: let -> LET
4: r -> ID
4: : -> COLON
4: number -> NUMBER
4: ; -> SEMI
5: let -> LET
5: s -> ID
5: : -> COLON
5: string -> STRING
5: ; -> SEMI
6: let -> LET
6: b -> ID
6: : -> COLON
6: boolean -> BOOLTYPE
6: ; -> SEMI
8: i -> ID
8: = -> ASSIGN
8: 9 -> INT_VAL
8: ; -> SEMI
9: r -> ID
9: = -> ASSIGN
9: 2.4 -> REAL_VAL
9: ; -> SEMI
10: s -> ID
10: = -> ASSIGN
10: "Test" -> STR_VAL
10: ; -> SEMI
11: b -> ID
11: = -> ASSIGN
11: false -> FALSE_RW
11: ; -> SEMI
13: i -> ID
13: = -> ASSIGN
13: i -> ID
13: + -> PLUS
13: b -> ID
13: ; -> SEMI
14: console -> ID
14: . -> DOT
14: log -> ID
14: ( -> LPAR
14: i -> ID
14: ) -> RPAR
14: ; -> SEMI
16: r -> ID
16: = -> ASSIGN
16: r -> ID
16: / -> DIV
16: 2 -> INT_VAL
16: ; -> SEMI
17: console -> ID
17: . -> DOT
17: log -> ID
17: ( -> LPAR
17: r -> ID
17: ) -> RPAR
17: ; -> SEMI
19: s -> ID
19: = -> ASSIGN
19: s -> ID
19: + -> PLUS
19: 'D\n' -> STR_VAL
19: ; -> SEMI
20: console -> ID
20: . -> DOT
20: log -> ID
20: ( -> LPAR
20: s -> ID
20: ) -> RPAR
20: ; -> SEMI
22: b -> ID
22: = -> ASSIGN
22: 20 -> INT_VAL
22: < -> LT
22: i -> ID
22: ; -> SEMI
23: console -> ID
23: . -> DOT
23: log -> ID
23: ( -> LPAR
23: b -> ID
23: ) -> RPAR
23: ; -> SEMI
25: s -> ID
25: = -> ASSIGN
25: "i = " -> STR_VAL
25: + -> PLUS
25: i -> ID
25: + -> PLUS
25: "\n" -> STR_VAL
25: ; -> SEMI
26: console -> ID
26: . -> DOT
26: log -> ID
26: ( -> LPAR
26: s -> ID
26: ) -> RPAR
26: ; -> SEMI
28: r -> ID
28: = -> ASSIGN
28: 4.2 -> REAL_VAL
28: + -> PLUS
28: 2 -> INT_VAL
28: ; -> SEMI
29: console -> ID
29: . -> DOT
29: log -> ID
29: ( -> LPAR
29: r -> ID
29: ) -> RPAR
29: ; -> SEMI
