3: function -> FUNCTION
3: gcd -> ID
3: ( -> LPAR
3: a -> ID
3: : -> COLON
3: number -> NUMBER
3: , -> COMMA
3: b -> ID
3: : -> COLON
3: number -> NUMBER
3: ) -> RPAR
3: : -> COLON
3: number -> NUMBER
3: { -> LBRACE
5: if -> IF
5: ( -> LPAR
5: a -> ID
5: == -> EQ
5: 0 -> INT_VAL
5: ) -> RPAR
5: { -> LBRACE
6: return -> RETURN
6: b -> ID
6: ; -> SEMI
7: } -> RBRACE
8: if -> IF
8: ( -> LPAR
8: b -> ID
8: == -> EQ
8: 0 -> INT_VAL
8: ) -> RPAR
8: { -> LBRACE
9: return -> RETURN
9: a -> ID
9: ; -> SEMI
10: } -> RBRACE
13: if -> IF
13: ( -> LPAR
13: a -> ID
13: == -> EQ
13: b -> ID
13: ) -> RPAR
13: { -> LBRACE
14: return -> RETURN
14: a -> ID
14: ; -> SEMI
15: } -> RBRACE
18: if -> IF
18: ( -> LPAR
18: a -> ID
18: > -> GT
18: b -> ID
18: ) -> RPAR
18: { -> LBRACE
19: return -> RETURN
19: gcd -> ID
19: ( -> LPAR
19: a -> ID
19: - -> SUB
19: b -> ID
19: , -> COMMA
19: b -> ID
19: ) -> RPAR
19: ; -> SEMI
20: } -> RBRACE
21: return -> RETURN
21: gcd -> ID
21: ( -> LPAR
21: a -> ID
21: , -> COMMA
21: b -> ID
21: - -> SUB
21: a -> ID
21: ) -> RPAR
21: ; -> SEMI
22: } -> RBRACE
25: let -> LET
25: a -> ID
25: = -> ASSIGN
25: gcd -> ID
25: ( -> LPAR
25: 10 -> INT_VAL
25: , -> COMMA
25: 3 -> INT_VAL
25: ) -> RPAR
25: ; -> SEMI
27: console -> ID
27: . -> DOT
27: log -> ID
27: ( -> LPAR
27: a -> ID
27: ) -> RPAR
27: ; -> SEMI
